<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Этнографическая викторина</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: #f0f0f0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .score-board {
            font-size: 24px;
            margin: 20px;
            color: #2c3e50;
        }
        .timer {
            width: 200px;
            height: 10px;
            background: #ddd;
            border-radius: 5px;
            margin: 20px;
            overflow: hidden;
        }
        .timer-progress {
            height: 100%;
            background: #27ae60;
            width: 100%;
            transition: width 1s linear;
        }
        .question-images {
            display: flex;
            gap: 20px;
            margin: 20px;
            max-height: 300px;
        }
        .question-images img {
            height: 300px;
            object-fit: cover;
            border: 3px solid transparent;
            border-radius: 10px;
            cursor: pointer;
            transition: 0.3s;
        }
        .answers {
            display: flex;
            gap: 20px;
            flex-wrap: wrap;
            justify-content: center;
        }
        .answer-option {
            width: 200px;
            height: 200px;
            cursor: pointer;
            border: 3px solid transparent;
            border-radius: 10px;
            overflow: hidden;
            transition: 0.3s;
        }
        .answer-option:hover {
            transform: scale(1.05);
            border-color: #3498db;
        }
        .answer-option img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .question-text {
            font-size: 24px;
            margin: 20px;
            color: #34495e;
        }
		.answer-option:active {
			transform: scale(0.95);
			box-shadow: 0 0 15px rgba(52, 152, 219, 0.5);
		}
    </style>
</head>
<body>
    <div class="score-board">Баллы: <span id="score">50</span></div>
    <div class="timer">
        <div class="timer-progress" id="timer"></div>
    </div>
    <div class="question-images" id="questionImages"></div>
    <div class="question-text">Какая территория у этого этноса?</div>
    <div class="answers" id="answers"></div>

<script>
    let quizData = [];
    let score = 50;
    let timerId;
    let timeLeft;
    const questionTime = 30;
	
	 function loadData() {
        return fetch('data.csv')
            .then(response => response.text())
            .then(data => {
                const allData = data.split('\n')
                    .map((row, index) => {
                        try {
                            const [name, img1, img2, extra, correctImg] = row.split(';');
                            if (!img1 || !img2 || !correctImg) return null;
                            
                            // Добавляем префиксы к путям
                            return {
                                img1: `faces/${img1.trim()}`,
                                img2: `faces/${img2.trim()}`,
                                correctImg: `m/${correctImg.trim()}`
                            };
                        } catch (e) {
                            return null;
                        }
                    })
                    .filter(item => item !== null);

               if (allData.length === 0) throw new Error('Нет валидных данных в файле');
                
                // Перемешивание Фишера-Йетса
                for (let i = allData.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [allData[i], allData[j]] = [allData[j], allData[i]];
                }
                
                return allData;
            });
    }


    // Инициализация игры
    async function initGame() {
        try {
            quizData = await loadData();
            if (quizData.length === 0) {
                alert('Ошибка: нет данных для игры!');
                return;
            }
            startNewRound();
        } catch (error) {
            alert(`Ошибка загрузки: ${error.message}`);
        }
    }

    function startNewRound() {
        // Очистка предыдущего состояния
        clearInterval(timerId);
        document.getElementById('questionImages').innerHTML = '';
        document.getElementById('answers').innerHTML = '';

        // Проверка наличия данных
        if (quizData.length === 0) {
            endGame();
            return;
        }

        // Выбор случайного вопроса
        const currentIndex = Math.floor(Math.random() * quizData.length);
        const currentItem = quizData[currentIndex];
        
        // Удаление использованного элемента
        quizData.splice(currentIndex, 1);

        // Проверка валидности текущего элемента
        if (!currentItem?.correctImg) {
            console.error('Обнаружен некорректный элемент:', currentItem);
            startNewRound(); // Пропустить битый вопрос
            return;
        }

        // Отображение вопроса
         document.getElementById('questionImages').innerHTML = `
            <img src="${currentItem.img1}" 
                 onerror="this.src='faces/placeholder.jpg'">
            <img src="${currentItem.img2}" 
                 onerror="this.src='faces/placeholder.jpg'">
        `;


        // Формирование ответов
        const answers = new Set([currentItem.correctImg]);
        
        // Добавление случайных неправильных ответов
        while (answers.size < 3) {
            const randomItem = quizData[Math.floor(Math.random() * quizData.length)];
            if (randomItem?.correctImg && !answers.has(randomItem.correctImg)) {
                answers.add(randomItem.correctImg);
            }
        }

        // Преобразование в массив и перемешивание
        const answersArray = Array.from(answers);
        answersArray.sort(() => Math.random() - 0.5);

        // Отрисовка ответов
        document.getElementById('answers').innerHTML = answersArray.map(img => `
            <div class="answer-option" 
                 onclick="checkAnswer('${img}', '${currentItem.correctImg}')">
                <img src="${img}" 
                     onerror="this.src='m/placeholder.jpg'"
                     alt="Вариант ответа">
            </div>
        `).join('');

        // Запуск таймера
        timeLeft = questionTime;
        document.getElementById('timer').style.width = '100%';
        timerId = setInterval(() => {
            timeLeft--;
            document.getElementById('timer').style.width = `${(timeLeft/questionTime)*100}%`;
            if(timeLeft <= 0) handleAnswer(false);
        }, 1000);
    }

    // Остальные функции без изменений
    function checkAnswer(selected, correct) {
        handleAnswer(selected === correct);
    }

    function handleAnswer(isCorrect) {
        clearInterval(timerId);
        const points = isCorrect ? 30 + timeLeft : -30;
        score = Math.max(0, score + points); // Запрет отрицательных очков
        document.getElementById('score').textContent = score;
        
        // Показ результата
        const result = document.createElement('div');
        result.textContent = isCorrect ? 
            `Правильно! +${30 + timeLeft} баллов` : 
            `Ошибка! -30 баллов`;
        result.style.color = isCorrect ? 'green' : 'red';
        document.body.appendChild(result);
        
        setTimeout(() => {
            result.remove();
            if(quizData.length > 0 && score > 0) {
                startNewRound();
            } else {
                endGame();
            }
        }, 1500);
    }

    function endGame() {
        alert(`Игра окончена! Ваш счет: ${score}`);
        initGame(); // Рестарт игры
    }

    // Запуск при загрузке
    initGame();
</script>
</body>
</html>